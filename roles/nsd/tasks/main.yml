---

- name: Custom role dependant variables (master)
  include_vars:
    file: master.yml
  when: is_nsd_master|default(false)
  tags:
    - unsigned_zones
    - signed_zones

- name: Custom role dependant variables (slave)
  include_vars:
    file: slave.yml
  when: is_nsd_slave|default(false)
  tags:
    - unsigned_zones
    - signed_zones

- name: Install nsd
  dnf: pkg={{ nsd_pkg_name }} state=present

- name: Create master zones directory
  file:
    path: "{{ nsd_master_zones_dir }}"
    state: directory
    owner: nsd
    group: nsd
    mode: 0775

- name: Create slave zones directory
  file:
    path: "{{ nsd_slave_zones_dir }}"
    state: directory
    owner: nsd
    group: nsd
    mode: 0755

- name: Create nsd log directory
  file:
    path: "{{ nsd_log_dir }}"
    state: directory
    owner: nsd
    group: nsd
    mode: 0775
    setype: nsd_log_t

- name: Configure nsd zones
  template:
    src: zones_config.j2
    dest: "{{ nsd_zones_config_file }}"
    owner: root
    group: root
    mode: 0644
    validate: '/usr/sbin/nsd-checkconf %s'
  notify:
    - rebuild nsd database
    - reload nsd database
    - restart nsd

- name: Create base nsd configuration file
  template:
    src: nsd_config.j2
    dest: "{{ nsd_config_dir }}/nsd.conf"
    owner: root
    group: root
    mode: 0644
    validate: '/usr/sbin/nsd-checkconf %s'
  notify:
    - restart nsd

- name: Stat against nsd_control.pem
  stat:
   path: "{{ nsd_config_dir }}/nsd_control.pem"
  register: stat_result

- name: Generate nsd control SSL certificates
  command: "{{ nsd_control_setup_program }}"
  when: not stat_result.stat.exists

- name: Make sure nsd is running
  service:
    name: "{{ nsd_service_name }}"
    state: started
    enabled: yes

- name: Copy content of unsigned zones
  copy:
    src: "unsigned_zones/{{ item.zone_filename }}"
    dest: "{{ nsd_master_zones_dir }}/{{ item.zone_filename }}"
    owner: nsd
    group: nsd
    mode: 0664
  with_items: "{{ nsd_unsigned_zones }}"
  when: is_nsd_master|default(false)
  notify:
    - rebuild nsd database
    - reload nsd database
    - notify slaves
  tags:
    - unsigned_zones

- name: Copy content of signed zones
  copy:
    src: "/srv/dns/built/{{ item.zone_filename }}.signed"
    dest: "{{ nsd_master_zones_dir }}/{{ item.zone_filename }}"
    owner: nsd
    group: nsd
    mode: 0664
    remote_src: yes
  with_items: "{{ nsd_signed_zones }}"
  when: is_nsd_master|default(false)
  notify:
    - rebuild nsd database
    - reload nsd database
    - notify slaves
  tags:
    - signed_zones

- name: Install certbot
  dnf: name=certbot state=installed
  when: is_nsd_master|default(false)

- name: Install certbot renew timer for OCP4
  template:
    src: openshift-certbot-renew.timer.j2
    dest: /etc/systemd/system/openshift-certbot-renew.timer
  when: is_nsd_master|default(false)

- name: Install certbot renew service for OCP4
  template:
    src: openshift-certbot-renew.service.j2
    dest: /etc/systemd/system/openshift-certbot-renew.service
  when: is_nsd_master|default(false)

- name: Enable openshift-certbot-renew timer
  systemd:
    name: openshift-certbot-renew.timer
    state: started
    enabled: yes
    daemon-reload: yes
  when: is_nsd_master|default(false)

- name: Configure Git user name for automatic-dnssec-signzone
  git_config:
    name: user.name
    scope: global
    value: "Local Root user"
  when: is_nsd_master|default(false)

- name: Configure Git user email for automatic-dnssec-signzone
  git_config:
    name: user.email
    scope: global
    value: gnome-sysadmin@gnome.org
  when: is_nsd_master|default(false)

- name: Copy automatic-dnssec-signzone script
  copy:
    src: automatic-dnssec-signzone
    dest: /usr/local/bin/automatic-dnssec-signzone
    owner: root
    group: root
    mode: 0755
  when: is_nsd_master|default(false)

- name: Install DNSSEC automatic signzone service
  template:
    src: automatic-dnssec-signzone.service.j2
    dest: /etc/systemd/system/automatic-dnssec-signzone.service
  when: is_nsd_master|default(false)

- name: Install DNSSEC automatic signzone timer
  template:
    src: automatic-dnssec-signzone.timer.j2
    dest: /etc/systemd/system/automatic-dnssec-signzone.timer
  when: is_nsd_master|default(false)

- name: Enable DNSSEC automatic signzone timer
  systemd:
    name: automatic-dnssec-signzone.timer
    state: started
    enabled: yes
    daemon-reload: yes
  when: is_nsd_master|default(false)

- name: Add safe.directory for /git/dns.git
  git_config:
    name: safe.directory
    scope: global
    value: /git/dns.git
  when: is_nsd_master|default(false)
